name: Setup EKS Cluster

on:
  push:
    branches:
      - setup
    paths:
      - 'terraform/**'
      - '.github/workflows/setup-eks.yml'
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'EKS Cluster Name'
        required: false
        default: 'glide-api-cluster'
      region:
        description: 'AWS Region'
        required: false
        default: 'us-east-1'
      force_setup:
        description: 'Force setup even if no changes'
        required: false
        default: false
        type: boolean

jobs:
  setup-eks:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[setup-eks]') || github.event_name == 'workflow_dispatch'"

    env:
      CLUSTER_NAME: ${{ github.event.inputs.cluster_name || 'glide-api-cluster' }}
      AWS_REGION: ${{ github.event.inputs.region || 'us-east-1' }}
      TF_VAR_cluster_name: ${{ github.event.inputs.cluster_name || 'glide-api-cluster' }}
      TF_VAR_region: ${{ github.event.inputs.region || 'us-east-1' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var="cluster_name=${CLUSTER_NAME}" -var="region=${AWS_REGION}" -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name "${CLUSTER_NAME}" --region "${AWS_REGION}"
          kubectl get nodes -o wide

      - name: Deploy Metrics Server
        run: |
          kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

      - name: Cluster Info
        run: |
          echo "EKS Cluster '${CLUSTER_NAME}' successfully deployed in region '${AWS_REGION}'"
          kubectl get nodes
          kubectl get pods --all-namespaces

      - name: Create Status File
        run: |
          mkdir -p cluster-status
          echo "ACTIVE" > cluster-status/status.txt
          echo "${CLUSTER_NAME}" > cluster-status/name.txt
          echo "${AWS_REGION}" > cluster-status/region.txt
          echo "$(date +%s)" > cluster-status/timestamp.txt

      - name: Commit Status
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'whyaneel@gmail.com'
          git add cluster-status/
          git commit -m "Update cluster status to ACTIVE [skip ci]" || echo "No changes to commit"
          git push
          
          # 9th Apr 2025 03
